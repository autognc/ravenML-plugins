model {
  center_net {
    num_classes: <replace_num_classes>
    feature_extractor {
      type: "resnet_v2_101"
    }
    image_resizer {
      keep_aspect_ratio_resizer {
        min_dimension: 224
        max_dimension: 224
        pad_to_max_dimension: true
      }
    }
    object_detection_task {
      task_loss_weight: 1.0
      offset_loss_weight: 1.0
      scale_loss_weight: 0.1
      localization_loss {
        l1_localization_loss {
        }
      }
    }
    object_center_params {
      object_center_loss_weight: 1.0
      min_box_overlap_iou: 0.7
      max_box_predictions: <replace_max_box_predictions>
      classification_loss {
        penalty_reduced_logistic_focal_loss {
          alpha: 2.0
          beta: 4.0
        }
      }
    }
  }
}

train_config: {

  fine_tune_checkpoint_version: V2
  fine_tune_checkpoint: "<replace_arch_path>checkpoint/ckpt-0"
  fine_tune_checkpoint_type: "classification"

  batch_size: <replace_batch_size>
  num_steps: <replace_train_steps>

  data_augmentation_options {
    random_horizontal_flip {
    }
  }

  data_augmentation_options {
    random_vertical_flip {
    }
  }

  data_augmentation_options {
    random_rotation90 {
    }
  }

  data_augmentation_options {
    random_crop_image {
      min_aspect_ratio: 0.5
      max_aspect_ratio: 1.7
      random_coef: 0.25
    }
  }


  data_augmentation_options {
    random_adjust_hue {
    }
  }

  data_augmentation_options {
    random_adjust_contrast {
    }
  }

  data_augmentation_options {
    random_adjust_saturation {
    }
  }

  data_augmentation_options {
    random_adjust_brightness {
    }
  }

  data_augmentation_options {
    random_absolute_pad_image {
       max_height_padding: 200
       max_width_padding: 200
       pad_color: [0, 0, 0]
    }
  }


  optimizer {
    adam_optimizer: {
      epsilon: <replace_epsilon>  # Match tf.keras.optimizers.Adam's default.
      learning_rate: {
        manual_step_learning_rate {
          initial_learning_rate: <replace_initial_learning_rate>
          schedule {
           step: 90000
           learning_rate: 1e-4
          }
          schedule {
            step: 120000
            learning_rate: 1e-5
          }
        }
      }
    }
    use_moving_average: false
  }

}
train_input_reader: {
  label_map_path: "<replace_data_path>label_map.pbtxt"
  tf_record_input_reader {
    input_path: "<replace_data_path>splits/complete/train/train.record-?????-of-<replace_num_train_records>"
  }
}

eval_config: {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
  batch_size: 1;
}

eval_input_reader: {
  label_map_path: "<replace_data_path>label_map.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "<replace_data_path>splits/complete/train/test.record-?????-of-<replace_num_test_records>"
  }
}
